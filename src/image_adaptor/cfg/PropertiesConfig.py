## *********************************************************
## 
## File autogenerated for the image_adaptor package 
## by the dynamic_reconfigure package.
## Please do not edit.
## 
## ********************************************************/

##**********************************************************
## Software License Agreement (BSD License)
##
##  Copyright (c) 2008, Willow Garage, Inc.
##  All rights reserved.
##
##  Redistribution and use in source and binary forms, with or without
##  modification, are permitted provided that the following conditions
##  are met:
##
##   * Redistributions of source code must retain the above copyright
##     notice, this list of conditions and the following disclaimer.
##   * Redistributions in binary form must reproduce the above
##     copyright notice, this list of conditions and the following
##     disclaimer in the documentation and/or other materials provided
##     with the distribution.
##   * Neither the name of the Willow Garage nor the names of its
##     contributors may be used to endorse or promote products derived
##     from this software without specific prior written permission.
##
##  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
##  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
##  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
##  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
##  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
##  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
##  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
##  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
##  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
##  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
##  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
##  POSSIBILITY OF SUCH DAMAGE.
##**********************************************************/

config_description = [{'srcline': 29, 'description': 'Image output mode for the color/grayscale image', 'max': 9, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/properties.cfg', 'name': 'image_mode', 'edit_method': "{'enum_description': 'output mode', 'enum': [{'srcline': 11, 'description': '1280x1024@15Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'SXGA_15Hz'}, {'srcline': 12, 'description': '640x480@30Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'VGA_30Hz'}, {'srcline': 13, 'description': '640x480@25Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'VGA_25Hz'}, {'srcline': 14, 'description': '320x240@25Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'QVGA_25Hz'}, {'srcline': 15, 'description': '320x240@30Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'QVGA_30Hz'}, {'srcline': 16, 'description': '320x240@60Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': 'QVGA_60Hz'}, {'srcline': 17, 'description': '160x120@25Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 7, 'ctype': 'int', 'type': 'int', 'name': 'QQVGA_25Hz'}, {'srcline': 18, 'description': '160x120@30Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 8, 'ctype': 'int', 'type': 'int', 'name': 'QQVGA_30Hz'}, {'srcline': 19, 'description': '160x120@60Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 9, 'ctype': 'int', 'type': 'int', 'name': 'QQVGA_60Hz'}]}", 'default': 2, 'level': 1, 'min': 1, 'type': 'int'}, {'srcline': 30, 'description': 'depth output mode', 'max': 9, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/properties.cfg', 'name': 'depth_mode', 'edit_method': "{'enum_description': 'output mode', 'enum': [{'srcline': 11, 'description': '1280x1024@15Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'SXGA_15Hz'}, {'srcline': 12, 'description': '640x480@30Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'VGA_30Hz'}, {'srcline': 13, 'description': '640x480@25Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'VGA_25Hz'}, {'srcline': 14, 'description': '320x240@25Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'QVGA_25Hz'}, {'srcline': 15, 'description': '320x240@30Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'QVGA_30Hz'}, {'srcline': 16, 'description': '320x240@60Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': 'QVGA_60Hz'}, {'srcline': 17, 'description': '160x120@25Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 7, 'ctype': 'int', 'type': 'int', 'name': 'QQVGA_25Hz'}, {'srcline': 18, 'description': '160x120@30Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 8, 'ctype': 'int', 'type': 'int', 'name': 'QQVGA_30Hz'}, {'srcline': 19, 'description': '160x120@60Hz', 'srcfile': '../cfg/properties.cfg', 'cconsttype': 'const int', 'value': 9, 'ctype': 'int', 'type': 'int', 'name': 'QQVGA_60Hz'}]}", 'default': 2, 'level': 1, 'min': 2, 'type': 'int'}, {'srcline': 33, 'description': 'Depth data registration activated or not', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '../cfg/properties.cfg', 'name': 'depth_registration', 'edit_method': '', 'default': False, 'level': 1, 'min': False, 'type': 'bool'}, {'srcline': 35, 'description': 'Skip N images for every image published (rgb/depth/depth_registered/ir)', 'max': 10, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/properties.cfg', 'name': 'data_skip', 'edit_method': '', 'default': 0, 'level': 1, 'min': 0, 'type': 'int'}, {'srcline': 37, 'description': 'depth image time offset in seconds', 'max': 1.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/properties.cfg', 'name': 'depth_time_offset', 'edit_method': '', 'default': 0.0, 'level': 1, 'min': -1.0, 'type': 'double'}, {'srcline': 38, 'description': 'image time offset in seconds', 'max': 1.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/properties.cfg', 'name': 'image_time_offset', 'edit_method': '', 'default': 0.0, 'level': 1, 'min': -1.0, 'type': 'double'}, {'srcline': 40, 'description': 'X offset between IR and depth images', 'max': 10.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/properties.cfg', 'name': 'depth_ir_offset_x', 'edit_method': '', 'default': 5.0, 'level': 1, 'min': -10.0, 'type': 'double'}, {'srcline': 41, 'description': 'Y offset between IR and depth images', 'max': 10.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/properties.cfg', 'name': 'depth_ir_offset_y', 'edit_method': '', 'default': 4.0, 'level': 1, 'min': -10.0, 'type': 'double'}, {'srcline': 42, 'description': 'Z coordinate offset in mm', 'max': 50, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/properties.cfg', 'name': 'z_offset_mm', 'edit_method': '', 'default': 0, 'level': 1, 'min': -50, 'type': 'int'}, {'srcline': 45, 'description': 'Specific resolution for RGB camera', 'max': 4, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/properties.cfg', 'name': 'rgb_resolution', 'edit_method': '', 'default': 2, 'level': 1, 'min': 1, 'type': 'int'}, {'srcline': 46, 'description': 'Specific frequency for RGB camera', 'max': 60, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/properties.cfg', 'name': 'rgb_frequency', 'edit_method': '', 'default': 30, 'level': 1, 'min': 15, 'type': 'int'}, {'srcline': 47, 'description': 'Specific resolution for RGB camera', 'max': 4, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/properties.cfg', 'name': 'rgb/resolution', 'edit_method': '', 'default': 2, 'level': 1, 'min': 1, 'type': 'int'}, {'srcline': 48, 'description': 'Specific frequency for RGB camera', 'max': 60, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/properties.cfg', 'name': 'rgb/frequency', 'edit_method': '', 'default': 30, 'level': 1, 'min': 15, 'type': 'int'}, {'srcline': 50, 'description': 'Specific resolution for Depth camera', 'max': 4, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/properties.cfg', 'name': 'depth_resolution', 'edit_method': '', 'default': 2, 'level': 1, 'min': 1, 'type': 'int'}, {'srcline': 51, 'description': 'Specific frequency for Depth camera', 'max': 60, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/properties.cfg', 'name': 'depth_frequency', 'edit_method': '', 'default': 30, 'level': 1, 'min': 15, 'type': 'int'}, {'srcline': 57, 'description': 'Current real tilt of the camera', 'max': 65.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/properties.cfg', 'name': 'cur_tilt_angle', 'edit_method': '', 'default': 0.0, 'level': 2, 'min': -65.0, 'type': 'double'}, {'srcline': 58, 'description': 'Base-camera angle', 'max': 31.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/properties.cfg', 'name': 'tilt_angle', 'edit_method': '', 'default': 0.0, 'level': 2, 'min': -31.0, 'type': 'double'}, {'srcline': 59, 'description': 'Led color and blinking mode state ', 'max': 8, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/properties.cfg', 'name': 'led_option', 'edit_method': '', 'default': 4, 'level': 2, 'min': 0, 'type': 'int'}, {'srcline': 64, 'description': 'Rgb rectified image', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '../cfg/properties.cfg', 'name': 'rect_rgb_image', 'edit_method': '', 'default': 'Hello World', 'level': 4, 'min': '', 'type': 'str'}]

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

for param in config_description:
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

Properties_SXGA_15Hz = 1
Properties_VGA_30Hz = 2
Properties_VGA_25Hz = 3
Properties_QVGA_25Hz = 4
Properties_QVGA_30Hz = 5
Properties_QVGA_60Hz = 6
Properties_QQVGA_25Hz = 7
Properties_QQVGA_30Hz = 8
Properties_QQVGA_60Hz = 9
