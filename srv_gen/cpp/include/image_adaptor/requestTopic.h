/* Auto-generated by genmsg_cpp for file /home/super/ros_workspace/image_adaptor/srv/requestTopic.srv */
#ifndef IMAGE_ADAPTOR_SERVICE_REQUESTTOPIC_H
#define IMAGE_ADAPTOR_SERVICE_REQUESTTOPIC_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace image_adaptor
{
template <class ContainerAllocator>
struct requestTopicRequest_ {
  typedef requestTopicRequest_<ContainerAllocator> Type;

  requestTopicRequest_()
  : nImages(0)
  , sourceTopic()
  , responseTopic()
  {
  }

  requestTopicRequest_(const ContainerAllocator& _alloc)
  : nImages(0)
  , sourceTopic(_alloc)
  , responseTopic(_alloc)
  {
  }

  typedef int64_t _nImages_type;
  int64_t nImages;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _sourceTopic_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  sourceTopic;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _responseTopic_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  responseTopic;


private:
  static const char* __s_getDataType_() { return "image_adaptor/requestTopicRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "649216dbe3b2606914f2eb065f7f6dab"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "b817ce56db2701eab6ea62d45b0f064b"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int64 nImages\n\
string sourceTopic\n\
string responseTopic\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, nImages);
    ros::serialization::serialize(stream, sourceTopic);
    ros::serialization::serialize(stream, responseTopic);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, nImages);
    ros::serialization::deserialize(stream, sourceTopic);
    ros::serialization::deserialize(stream, responseTopic);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(nImages);
    size += ros::serialization::serializationLength(sourceTopic);
    size += ros::serialization::serializationLength(responseTopic);
    return size;
  }

  typedef boost::shared_ptr< ::image_adaptor::requestTopicRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::image_adaptor::requestTopicRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct requestTopicRequest
typedef  ::image_adaptor::requestTopicRequest_<std::allocator<void> > requestTopicRequest;

typedef boost::shared_ptr< ::image_adaptor::requestTopicRequest> requestTopicRequestPtr;
typedef boost::shared_ptr< ::image_adaptor::requestTopicRequest const> requestTopicRequestConstPtr;


template <class ContainerAllocator>
struct requestTopicResponse_ {
  typedef requestTopicResponse_<ContainerAllocator> Type;

  requestTopicResponse_()
  : response()
  {
  }

  requestTopicResponse_(const ContainerAllocator& _alloc)
  : response(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _response_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  response;


private:
  static const char* __s_getDataType_() { return "image_adaptor/requestTopicResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "6de314e2dc76fbff2b6244a6ad70b68d"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "b817ce56db2701eab6ea62d45b0f064b"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "string response\n\
\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, response);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, response);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(response);
    return size;
  }

  typedef boost::shared_ptr< ::image_adaptor::requestTopicResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::image_adaptor::requestTopicResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct requestTopicResponse
typedef  ::image_adaptor::requestTopicResponse_<std::allocator<void> > requestTopicResponse;

typedef boost::shared_ptr< ::image_adaptor::requestTopicResponse> requestTopicResponsePtr;
typedef boost::shared_ptr< ::image_adaptor::requestTopicResponse const> requestTopicResponseConstPtr;

struct requestTopic
{

typedef requestTopicRequest Request;
typedef requestTopicResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct requestTopic
} // namespace image_adaptor

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::image_adaptor::requestTopicRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::image_adaptor::requestTopicRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::image_adaptor::requestTopicRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "649216dbe3b2606914f2eb065f7f6dab";
  }

  static const char* value(const  ::image_adaptor::requestTopicRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x649216dbe3b26069ULL;
  static const uint64_t static_value2 = 0x14f2eb065f7f6dabULL;
};

template<class ContainerAllocator>
struct DataType< ::image_adaptor::requestTopicRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "image_adaptor/requestTopicRequest";
  }

  static const char* value(const  ::image_adaptor::requestTopicRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::image_adaptor::requestTopicRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int64 nImages\n\
string sourceTopic\n\
string responseTopic\n\
\n\
";
  }

  static const char* value(const  ::image_adaptor::requestTopicRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::image_adaptor::requestTopicResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::image_adaptor::requestTopicResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::image_adaptor::requestTopicResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6de314e2dc76fbff2b6244a6ad70b68d";
  }

  static const char* value(const  ::image_adaptor::requestTopicResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x6de314e2dc76fbffULL;
  static const uint64_t static_value2 = 0x2b6244a6ad70b68dULL;
};

template<class ContainerAllocator>
struct DataType< ::image_adaptor::requestTopicResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "image_adaptor/requestTopicResponse";
  }

  static const char* value(const  ::image_adaptor::requestTopicResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::image_adaptor::requestTopicResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string response\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::image_adaptor::requestTopicResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::image_adaptor::requestTopicRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.nImages);
    stream.next(m.sourceTopic);
    stream.next(m.responseTopic);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct requestTopicRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::image_adaptor::requestTopicResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.response);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct requestTopicResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<image_adaptor::requestTopic> {
  static const char* value() 
  {
    return "b817ce56db2701eab6ea62d45b0f064b";
  }

  static const char* value(const image_adaptor::requestTopic&) { return value(); } 
};

template<>
struct DataType<image_adaptor::requestTopic> {
  static const char* value() 
  {
    return "image_adaptor/requestTopic";
  }

  static const char* value(const image_adaptor::requestTopic&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<image_adaptor::requestTopicRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b817ce56db2701eab6ea62d45b0f064b";
  }

  static const char* value(const image_adaptor::requestTopicRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<image_adaptor::requestTopicRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "image_adaptor/requestTopic";
  }

  static const char* value(const image_adaptor::requestTopicRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<image_adaptor::requestTopicResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b817ce56db2701eab6ea62d45b0f064b";
  }

  static const char* value(const image_adaptor::requestTopicResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<image_adaptor::requestTopicResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "image_adaptor/requestTopic";
  }

  static const char* value(const image_adaptor::requestTopicResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // IMAGE_ADAPTOR_SERVICE_REQUESTTOPIC_H

